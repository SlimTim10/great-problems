import Control.Lens ( (^.) )
import Control.Monad ( unless, void )
import Control.Monad.Trans ( MonadIO(liftIO) )
import Data.Default ( Default(..) )
import Data.Map ( Map )
import Data.Maybe ( fromMaybe )
import Data.Text ( Text )
import qualified Data.Text as T ( null, pack )
import GHCJS.DOM.Types ( JSVal )
import Language.Javascript.JSaddle
    ( asyncFunction, fromJSValUnchecked, js, js0, js1, js2, jsg )
import Language.Javascript.JSaddle.Object
    ( MakeObject(..), create, (<#) )
import Language.Javascript.JSaddle.Types ( MonadJSM, liftJSM )
import Language.Javascript.JSaddle.Value ( ToJSVal(..) )
import Reflex
    ( MonadHold(holdDyn),
      PerformEvent(performEvent, Performable),
      Reflex(Event, Dynamic),
      PostBuild(..),
      TriggerEvent,
      constDyn,
      attachPromptlyDynWith,
      performEventAsync )
import Reflex.Dom.Core ( DomBuilder )
import qualified Util ( consoleLog )
