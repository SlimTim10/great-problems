import qualified Database.PostgreSQL.Simple as SQL
    ( execute, query, query_, Only(..), Connection, In(In), Query )
import qualified Database.PostgreSQL.Simple.ToField as SQL
    ( Action, ToField(..) )
import qualified Data.Text as Text ( splitOn )
import qualified Data.CaseInsensitive as CI ( CI(original) )
import qualified Common.Route as Route
    ( Query, readParamFromQuery, textParamFromQuery )
import qualified Common.Api.Problem as Problem
    ( UpdateProblem(upProblemId, upTopicId, upContent, upSummary),
      CreateProblem(cpAuthorId, cpTopicId, cpContent, cpSummary),
      Problem(..) )
import qualified Common.Api.Topic as Topic ( Topic(id, parentId) )
import qualified Common.Api.Register as Register
    ( Register(email, fullName, password) )
import qualified Common.Api.User as User ( User(..) )
import qualified Common.Api.Role as Role ( Role(..) )
import qualified Common.Api.Auth as Auth ( Auth(password, email) )
import qualified Database.Types.Problem as DbProblem
    ( Problem(updated_at, created_at, author_id, topic_id, content,
              summary, id) )
import qualified Database.Types.User as DbUser
    ( User(password, verified, email, full_name, id, role_id) )
import qualified Database.Types.Role as DbRole ( Role(Role, id) )
import qualified Database.Types.EmailVerification as DbEmailVerification
    ( EmailVerification(id, user_id) )
import qualified Database.Types.Session as DbSession
    ( Session(user_id) )
import qualified Util
    ( headMay,
      whenM,
      hashPassword,
      verifyPassword,
      generateRandomText )
import Global
    ( Text, CI, catMaybes, isNothing, void, intersperse, (>=>) )
