import qualified Data.Map as Map ( mapKeys )
import qualified Language.Javascript.JSaddle as JS
    ( MonadJSM, JSVal(JSVal) )
import qualified "jsaddle-dom" GHCJS.DOM.Document as DOM
    ( IsDocument )
import qualified JSDOM.Types ( File )
import qualified Obelisk.Route.Frontend as Ob
    ( R, routeLink, RouteToUrl, SetRoute(setRoute) )
import qualified Reflex.Dom.Core as R
    ( def,
      constDyn,
      ffor,
      leftmost,
      tagPromptlyDyn,
      tickLossyFromPostBuildTime,
      elementConfig_initialAttributes,
      inputElementConfig_elementConfig,
      inputElementConfig_initialValue,
      blank,
      dynText,
      dyn_,
      el,
      elClass,
      text,
      decodeText,
      MonadHold(holdDyn),
      MonadSample,
      Reflex(never, updated, Dynamic, Event),
      PerformEvent(performEvent, Performable),
      PostBuild,
      TickInfo,
      TriggerEvent,
      HasJSContext,
      DomBuilder(inputElement, DomBuilderSpace),
      DomSpace(RawDocument),
      HasDocument,
      Prerender,
      HasValue(value) )
import qualified MyReflex.Dom.Xhr.FormData as R'
    ( FormValue(FormValue_List, FormValue_Text) )
import qualified Common.Route as Route
    ( ProblemsRoute(ProblemsRoute_Edit, ProblemsRoute_View),
      FrontendRoute(FrontendRoute_Problems),
      Api(Api_Problems),
      apiHref )
import qualified Common.File ( FileWithName )
import qualified Common.Api.Compile as Compile
    ( Response, Request(Request), OutputOption(..) )
import qualified Common.Api.Error as Error ( Error(message) )
import qualified Common.Api.Problem as Problem
    ( RequestParam(..),
      RequestSave(..),
      UpdateProblem(UpdateProblem, upAuthorId, upTopicId, upContent,
                    upSummary, upProblemId),
      CreateProblem(CreateProblem, cpAuthorId, cpTopicId, cpContent,
                    cpSummary),
      Problem(content, id, summary, topic) )
import qualified Common.Api.Topic as Topic ( Topic(id) )
import qualified Common.Api.User as User ( User(id) )
import qualified Problem.SelectTopic as SelectTopic ( widget )
import qualified Problem.Summary as Summary ( widget )
import qualified Problem.Figures as Figures ( widget )
import qualified Problem.Editor as Editor ( widget )
import qualified Problem.ErrorsToggle as ErrorsToggle ( widget )
import qualified Problem.PdfViewer as PdfViewer ( widget )
import qualified Problem.Compile ( widget, performRequest )
import qualified Problem.UploadPrb as UploadPrb ( widget )
import qualified Problem.DownloadPrb as DownloadPrb ( widget )
import qualified Problem.Loading as Loading
    ( WithLoading(WithLoading), anyLoading, latestAction )
import qualified Widget.Button as Button
    ( primaryClass', primarySmallClass' )
import qualified Widget.Input as Input ( checkboxClass )
import qualified Util
    ( getOnload, getCurrentUser, formFile, postForm )
import Global
    ( MonadFix,
      when,
      Text,
      Map,
      fromMaybe,
      fromJust,
      isJust,
      (<&>),
      (&),
      (.~),
      cs,
      (:/),
      (=:) )
