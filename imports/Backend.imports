import qualified Data.ByteString as BS ( ByteString )
import qualified Data.Text as Text ( null )
import qualified Control.Monad.IO.Class as IO ( MonadIO(liftIO) )
import qualified Data.Aeson as JSON ( decode, encode, ToJSON )
import qualified Data.Map as Map ( lookup )
import qualified Data.Word as Word ( Word64 )
import qualified Data.CaseInsensitive as CI ( CI(original) )
import qualified Snap.Core as Snap
    ( expireCookie,
      getCookie,
      getRequest,
      modifyResponse,
      readRequestBody,
      writeLBS,
      addResponseCookie,
      setHeader,
      MonadSnap,
      Cookie(Cookie, cookieValue),
      Method(POST, GET),
      Request(rqMethod) )
import qualified Obelisk.Backend as Ob ( Backend(..) )
import Obelisk.Route ( pattern (:/) )
import qualified Common.Route as Route
    ( FrontendRoute,
      Api(Api_SignOut, Api_SignIn, Api_VerifyEmail, Api_Register,
          Api_TopicHierarchy, Api_Users, Api_Topics, Api_Problems),
      BackendRoute(..),
      fullRouteEncoder )
import qualified Common.Api.Error as Error ( mk )
import qualified Database ( connect )
import qualified Database.Queries as Queries
    ( getProblems,
      getProblemById,
      addProblem,
      getTopics,
      getTopicById,
      getRootTopics,
      getTopicsByParentId,
      getTopicHierarchy,
      getUsers,
      getUserById,
      getUserByEmail,
      registerUser,
      verifyEmail,
      newEmailVerification )
import qualified Common.Api.User as User ( User(role, id) )
import qualified Common.Api.Register as Register
    ( Register(password, email, full_name) )
import qualified Common.Api.Role as Role
    ( Role(Moderator, Contributor) )
import qualified Common.Api.NewProblem as NewProblem
    ( NewProblem(author_id) )
import qualified Common.Api.OkResponse as OkResponse
    ( OkResponse(OkResponse) )
import qualified Auth
    ( Auth,
      AuthResult(Authenticated, Unverified, Indefinite),
      Session,
      authCheck,
      newSession,
      removeSession,
      getUser )
import qualified Email ( sendEmailVerification )
import Global ( when, Text, fromMaybe, isNothing, cs, readMaybe )
