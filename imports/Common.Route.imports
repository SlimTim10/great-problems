import Prelude
    ( ($),
      Applicative,
      Traversable(mapM),
      Monoid(mempty),
      Integer,
      Maybe,
      Either,
      error,
      either,
      concat,
      (<$>) )
import Control.Category ( (>>>), (.), id )
import Control.Categorical.Bifunctor ( bimap )
import Data.Text ( Text )
import Data.Functor.Identity ( Identity )
import Obelisk.Route ( pattern (:/) )
import qualified Obelisk.Route as Ob
    ( checkEncoder,
      maybeEncoder,
      mkFullRouteEncoder,
      pathComponentEncoder,
      pathSegmentEncoder,
      queryOnlyEncoder,
      renderBackendRoute,
      singlePathSegmentEncoder,
      unitEncoder,
      unsafeTshowEncoder,
      Encoder,
      FullRoute(FullRoute_Backend),
      PageName,
      R,
      SegmentResult(PathEnd, PathSegment) )
import qualified Obelisk.Route.TH as Ob ( deriveRouteComponent )
import Global ( Map )
