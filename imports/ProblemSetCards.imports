import qualified Data.CaseInsensitive as CI ( CI(original) )
import qualified Control.Monad.Fix as Fix ( MonadFix )
import qualified Language.Javascript.JSaddle as JS ( MonadJSM )
import qualified Obelisk.Route.Frontend as Ob
    ( R, routeLink, RouteToUrl, SetRoute )
import qualified Reflex.Dom.Core as R
    ( ffor,
      simpleList,
      dyn_,
      el,
      elClass,
      text,
      MonadHold(holdDyn),
      Reflex(Event, Dynamic),
      PerformEvent(Performable),
      PostBuild,
      TriggerEvent,
      HasJSContext,
      DomBuilder,
      Prerender )
import qualified Common.Api.Topic as Topic ( Topic(Topic) )
import qualified Common.Api.ProblemSet as ProblemSet
    ( ProblemSet(summary, id, updated_at) )
import qualified Common.Api.ProblemSetCard as ProblemSetCard
    ( ProblemSetCard(ProblemSetCard) )
import qualified Common.Api.User as User ( User(full_name, id) )
import qualified Common.Route as Route
    ( TopicsRoute(TopicsRoute_ProblemSets),
      FrontendRoute(FrontendRoute_ViewUser, FrontendRoute_ViewProblemSet,
                    FrontendRoute_Topics) )
import qualified Util ( getOnload )
import Global ( fromMaybe, void, unless, forM_, cs, (:/) )
